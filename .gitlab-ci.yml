stages:
  - build
  - doc
  - packaging
  - deployment

#===========================================================================
# TEMPLATES
#===========================================================================
.build_template: &build_definition
  stage: build
  before_script:
    - cmake -E remove_directory build
    - cmake -E make_directory build
  script:
    - cmake -E chdir build cmake -DBUILD_SHARED_LIBS=ON -DBUILD_TEST=ON -DCMAKE_BUILD_TYPE=Release ..
    - cmake -E chdir build cmake --build .
  allow_failure: false

#===========================================================================
# BUILD 
#===========================================================================
build:osx:
  <<: *build_definition
  artifacts:
    paths:
      - build/libmapgen.*dylib*
      - build/test/biometexgen
      - build/test/noisetexgen
    expire_in: 1 week
  tags:
    - osx
build:linux:gcc:
  <<: *build_definition
  script:
    - CC=gcc CXX=g++ cmake -E chdir build cmake -DBUILD_SHARED_LIBS=ON -DBUILD_TEST=ON -DCMAKE_BUILD_TYPE=Release ..
    - cmake -E chdir build cmake --build .
  artifacts:
    paths:
      - build/libmapgen.*so*
      - build/test/biometexgen
      - build/test/noisetexgen
    expire_in: 1 week
  tags:
    - linux
build:linux:clang:
  <<: *build_definition
  script:
    - CC=clang CXX=clang++ cmake -E chdir build cmake -DBUILD_SHARED_LIBS=ON -DBUILD_TEST=ON -DCMAKE_BUILD_TYPE=Release ..
    - cmake -E chdir build cmake --build .
  artifacts:
    paths:
      - build/libmapgen.*so*
      - build/test/biometexgen
      - build/test/noisetexgen
    expire_in: 1 week
  tags:
    - linux
build:windows:
  <<: *build_definition
  script:
      - cmake -E chdir build cmake -DBUILD_TEST=ON -DCMAKE_BUILD_TYPE=Release ..
      - cmake -E chdir build cmake --build .
  artifacts:
    paths:
      - build\Debug\mapgen.lib
      - build\Debug\mapgen.pdb
      - build\test\Debug\biometexgen.exe
      - build\test\Debug\noisetexgen.exe
    expire_in: 1 week
  tags:
    - windows

#===========================================================================
# DOCUMENTATION
#===========================================================================
doc:generate api:
  stage: doc
  before_script:
    - cmake -E remove_directory build-doc
    - cmake -E make_directory build-doc
  script:
    - cmake -E chdir build-doc cmake -DBUILD_DOC=ON ..
    - cmake -E chdir build-doc cmake --build . --target doc
  artifacts:
    paths:
      - build-doc/generated_doc
    expire_in: 1 week
  dependencies: []
  tags:
    - documentation
#  only:je le
#    - develop
#    - master

#===========================================================================
# PACKAGING
#===========================================================================
packaging:linux:clang:
  stage: packaging
  before_script:
    - cmake -E remove_directory build
    - cmake -E make_directory build
    - cmake -E rename build-doc/generated_doc build/generated_doc
  script:
    - cmake -E chdir build cmake -DBUILD_DOC=ON -DBUILD_PACKAGE=ON -DCMAKE_BUILD_TYPE=Release ..
    - cmake -E chdir build cmake --build . --target package
    - ls -la
  artifacts:
    paths:
      - build/MapGeneration-0.1.1-Linux.sh
      - build/MapGeneration-0.1.1-Linux.tar.gz
      - build/MapGeneration-0.1.1-Linux.tar.Z
  dependencies:
    - doc:generate api
  tags:
    - linux

#===========================================================================
# DEPLOYMENT
#===========================================================================
deployment:develop:
  stage: deployment
  dependencies:
    - build:osx
    - build:windows
    - build:linux:gcc
    - build:linux:clang
    - doc:generate api
  script:
    - ./script/deploy $CI_COMMIT_SHA
  artifacts:
    paths:
      - deployment.tar.gz
    expire_in: 1 week
  tags:
    - deployment
#  only:
#    - develop